[workspace]
authors = ["sunbei00 <sunbei00@naver.com>"]
channels = ["conda-forge"]
name = "gs"
platforms = ["linux-64"]
version = "0.1.0"

[tasks]

# ===========================================================

[environments]
gs = {features=["gs"], no-default-feature=true}
ros = {features=["ros"], no-default-feature=true}


# ===========================================================

[feature.gs]
channels = ["conda-forge"]

[feature.gs.system-requirements]
cuda="11.8"

[feature.gs.dependencies]
cuda-version="11.8*"
pytorch-gpu="==2.0.0"
viser="*"
imageio-ffmpeg="*"
numpy="<2.0.0"
scipy="*"
tqdm="*"
torchmetrics="*"
py-opencv="*"
tyro=">=0.8.8"
pillow="*"
tensorboard="*"
tensorly="*"
pyyaml="*"
matplotlib="*"
splines="*"
pip="*"
jaxtyping="*"
ninja="*"
scikit-learn="*"
unzip="*"
torchvision="*"

[feature.gs.tasks]
simple_viewer={cmd="python3 examples/simple_viewer.py", cwd="./gsplat"}
gsplat_viewer={cmd="python3 examples/gsplat_viewer.py", cwd="./gsplat"}
simple_viewer_3dgut={cmd="python3 examples/simple_viewer_3dgut.py", cwd="./gsplat"}
simple_trainer={cmd="python3 examples/simple_trainer.py", cwd="./gsplat"}
target_simple_trainer={cmd="CUDA_VISIBLE_DEVICES=0 python3 examples/simple_trainer.py default --data_dir ~/nas/dataset/GaussianSplatting/360_v2/garden --data_factor 8 --result_dir ./results/garden", cwd="./gsplat"}
image_fitting={cmd="python3 examples/image_fitting.py --height 256 --width 256 --num_points 2000 --save_imgs", cwd="./gsplat"}
target_image_fitting={cmd="python3 examples/image_fitting.py --img_path /root/share/colmap_dataset/images/image_000001.png --save_imgs", cwd="./gsplat"}
download_dataset={cmd="python3 examples/datasets/download_dataset.py", cwd="./gsplat"}

#target_custom_trainer={cmd="CUDA_VISIBLE_DEVICES=0 python3 examples/custom_trainer.py default --data_dir ~/share/colmap_dataset --data_factor 1 --result_dir ./results/custom", cwd="./gsplat"}
#target_custom_trainer={cmd="CUDA_VISIBLE_DEVICES=0 python3 examples/custom_trainer.py mcmc --data_dir ~/share/colmap_dataset --data_factor 1 --result_dir ./results/custom", cwd="./gsplat"}

target_custom_trainer={cmd="CUDA_VISIBLE_DEVICES=0 python3 examples/custom_trainer.py default --data_dir ~/share/colmap_dataset --sh_degree 3 --batch_size 5 --data_factor 1 --result_dir ./results/custom", cwd="./gsplat"}
target_view={cmd="CUDA_VISIBLE_DEVICES=0 python3 -m simple_viewer --ckpt results/custom/ckpts/ckpt_6999_rank0.pt --output_dir results/custom/ --port 8082"}


# https://docs.gsplat.studio/main/index.html

[feature.gs.pypi-dependencies]
nerfview = { git = "https://github.com/nerfstudio-project/nerfview", rev = "4538024fe0d15fd1a0e4d760f3695fc44ca72787" }
fused-ssim = {git = "https://github.com/rahul-goel/fused-ssim", rev ="328dc9836f513d00c4b5bc38fe30478b4435cbb5"}
fused-bilagrid = {git = "https://github.com/harry7557558/fused-bilagrid", rev="90f9788e57d3545e3a033c1038bb9986549632fe"}
nerfacc = {git = "git+https://github.com/nerfstudio-project/nerfacc"}
pycolmap={git = "https://github.com/rmbrualla/pycolmap", rev="cc7ea4b7301720ac29287dbe450952511b32125e"}

[feature.gs.pypi-options]
no-build-isolation = ["fused-bilagrid", "fused-ssim", "nerfacc"]

# colmap model_converter --input_path /root/share/colmap/sparse/0 --output_path /root/share/colmap/sparse/0 --output_type BIN
# apt-get install colmap

# ===========================================================

[feature.ros]
channels = ["conda-forge", "robostack-staging"]

[feature.ros.dependencies]
opencv="*"
ros-humble-desktop-full="*"
colcon-ros="*"
gtsam="4.1*"
pcl="*"
python = "3.10.*"
mesalib="*"
libopengl="*"
#sudo apt-get install -y mesa-common-dev libglu1-mesa-dev


transforms3d="*"

[feature.ros.tasks]
bag_play = {cmd = "ros2 bag play /root/nas/Orchard_DataSet/2025_09_14_isaac_sim_structured_orchard/rosbag2_2025_09_14-06_44_11/"}
#preprocessing = {cmd = "python3 preprocessing.py --data_root /root/share/colmap_dataset --matcher exhaustive --dump_txt", cwd = "ros2_ws/src/GSImageSampler/scripts"}
preprocessing = {cmd = "python3 preprocessing.py --data_root /root/share/colmap_dataset --matcher sequential --dump_txt", cwd = "ros2_ws/src/GSImageSampler/scripts"}
viewer = {cmd = "colmap gui"}
build = {cmd = "colcon build", cwd = "ros2_ws/"}

